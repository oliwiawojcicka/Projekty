las = 1,
cex.names = 0.7)
orders2 <- read.csv("/Users/oliwi/Desktop/R/restaurant-2-orders.csv")
meteo <- read.csv("/Users/oliwi/Desktop/R/open-meteo-51.49N0.16W23m-3.csv")
library(dplyr)
colnames(meteo) <- c("time","temperature","apparent_temperatue","precipitation","rain","snowfall","snow_depth","weather_code","cloud_cover","wind_speed")
#zamiana w meteo kolumny time na dwie oddzielne zawierające datę i godzinę
WeatherDate <- as.Date(substr(meteo$time,1,10), format = "%Y-%m-%d")
WeatherHour <- as.numeric(substr(meteo$time,12,13))
Meteo <- meteo %>%
mutate(hour = WeatherHour, time = WeatherDate) %>%
filter(hour <= 21 & hour >= 12)
#zamiana w orders1 kolumny Order.Date na kolumnę zawierającą date i tylko godzine
OrderDate <- sapply(orders2$Order.Date, function(x) substr(x,1,13))
Orders2 <- orders2 %>%
mutate(Order.Date = OrderDate) %>%
arrange(desc(Order.ID))
#wyciągniecie z ramki Orders1 informacji o kwocie konkretnego zamówienia
OrderPrice <- Orders2 %>%
mutate(Total = Quantity * Product.Price) %>%
group_by(Order.ID) %>%
summarise(Order.Date = first(Order.Date), Total.Amount = sum(Total)) %>%
arrange(desc(Order.ID))
#zsumowanie kwot zamówień dla danej daty i godziny
OrderPriceHour <- OrderPrice %>%
group_by(Order.Date) %>%
summarise(Hour.Amount = sum(Total.Amount))
#rozdzielenie kolumny z datą i godziną na dwie oddzielne kolumny
OrderHour <- sapply(OrderPriceHour$Order.Date, function(x) as.numeric(substr(x,12,13)))
OrderPriceHour <- mutate(OrderPriceHour, Order.Date = as.Date(substr(Order.Date,1,10), format = "%d/%m/%Y"), Order.Hour = OrderHour) %>%
arrange(desc(Order.Date), desc(Order.Hour))
#łaczymy ramki danych: restauracja i pogoda
Merged <- right_join(OrderPriceHour, Meteo, by = c("Order.Date" = "time", "Order.Hour" = "hour"))
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od temperatury
Merged1 <- Merged %>%
mutate(temperature = floor(temperature)) %>%
group_by(temperature) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount,0))) %>%
arrange(temperature)
barplot(height = Merged1$Hour.Amount,
names.arg = Merged1$temperature,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od temperatury powietrza",
xlab = "Temperatura (°C)",
ylab = "Średnie kwoty zamówień (GBP)",   #GBP - funt
col = "pink",
border = "black",
las = 1,
cex.names = 0.7)
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od typu pogody
Merged2 <- Merged %>%
mutate(weather_code = case_when(
weather_code %in% c(0, 1, 2, 3) ~ "Mostly Clear",
weather_code %in% c(45, 48) ~ "Fog",
weather_code %in% c(95, 96, 99) ~ "Thunder",
weather_code %in% c(71, 73, 75, 77, 85, 86) ~ "Snow",
weather_code %in% c(51, 53, 55, 56, 57, 61, 63, 65, 66, 67, 80, 81, 82) ~ "Rain",
TRUE ~ as.character(weather_code)
)) %>%
group_by(weather_code) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(desc(Hour.Amount))
barplot(height = Merged2$Hour.Amount,
names.arg = Merged2$weather_code,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od pogody",
xlab = "Typ pogody",
ylab = "Średnie kwoty zamówień (GBP)",
col = "cornflowerblue",
border = "black",
las = 1,
cex.names = 0.7)
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od wiatru
Merged3 <- Merged %>%
mutate(wind_speed = floor(wind_speed)) %>%
filter(wind_speed < 47) %>%
group_by(wind_speed) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(wind_speed)
barplot(height = Merged3$Hour.Amount,
names.arg = Merged3$wind_speed,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od prędkości wiatru",
xlab = "Prędkość wiatru (km/h)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "red",
border = "black",
las = 2,
cex.names = 0.7)
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od deszczu
Merged4 <- Merged %>%
mutate(rain = round(rain * 2)/2) %>%
group_by(rain) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(rain)
barplot(height = Merged4$Hour.Amount,
names.arg = Merged4$rain,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od opadów deszczu",
xlab = "Opady deszczu (mm)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "darkgreen",
border = "black",
las = 1,
cex.names = 0.7)
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od śniegu
Merged5 <- Merged %>%
mutate(snowfall = round(snowfall, digits = 1)) %>%
group_by(snowfall) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(snowfall)
barplot(height = Merged5$Hour.Amount,
names.arg = Merged5$snowfall,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od opadów śniegu",
xlab = "Opady śniegu (cm)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "purple",
border = "black",
las = 1,
cex.names = 0.7)
barplot(height = Merged1$Hour.Amount,
names.arg = Merged1$temperature,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od temperatury powietrza",
xlab = "Temperatura (°C)",
ylab = "Średnie kwoty zamówień (GBP)",   #GBP - funt
col = "pink",
border = "black",
las = 1,
cex.names = 0.7)
barplot(height = Merged2$Hour.Amount,
names.arg = Merged2$weather_code,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od pogody",
xlab = "Typ pogody",
ylab = "Średnie kwoty zamówień (GBP)",
col = "cornflowerblue",
border = "black",
las = 1,
cex.names = 0.7)
barplot(height = Merged3$Hour.Amount,
names.arg = Merged3$wind_speed,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od prędkości wiatru",
xlab = "Prędkość wiatru (km/h)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "red",
border = "black",
las = 2,
cex.names = 0.7)
Merged3 <- Merged %>%
mutate(wind_speed = floor(wind_speed)) %>%
group_by(wind_speed) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(wind_speed)
barplot(height = Merged3$Hour.Amount,
names.arg = Merged3$wind_speed,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od prędkości wiatru",
xlab = "Prędkość wiatru (km/h)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "red",
border = "black",
las = 2,
cex.names = 0.7)
barplot(height = Merged4$Hour.Amount,
names.arg = Merged4$rain,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od opadów deszczu",
xlab = "Opady deszczu (mm)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "darkgreen",
border = "black",
las = 1,
cex.names = 0.7)
barplot(height = Merged5$Hour.Amount,
names.arg = Merged5$snowfall,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od opadów śniegu",
xlab = "Opady śniegu (cm)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "purple",
border = "black",
las = 1,
cex.names = 0.7)
orders1 <- read.csv("/Users/oliwi/Desktop/R/restaurant-1-orders.csv")
meteo <- read.csv("/Users/oliwi/Desktop/R/open-meteo-51.49N0.16W23m-3.csv")
library(dplyr)
colnames(meteo) <- c("time","temperature","apparent_temperatue","precipitation","rain","snowfall","snow_depth","weather_code","cloud_cover","wind_speed")
#zamiana w meteo kolumny time na dwie oddzielne zawierające datę i godzinę
WeatherDate <- as.Date(substr(meteo$time,1,10), format = "%Y-%m-%d")
WeatherHour <- as.numeric(substr(meteo$time,12,13))
Meteo <- meteo %>%
mutate(hour = WeatherHour, time = WeatherDate) %>%
filter(hour <= 21 & hour >= 12)
#zamiana w orders1 kolumny Order.Date na kolumnę zawierającą date i tylko godzine
OrderDate <- sapply(orders1$Order.Date, function(x) substr(x,1,13))
Orders1 <- orders1 %>%
mutate(Order.Date = OrderDate) %>%
arrange(desc(Order.Number))
#wyciągniecie z ramki Orders1 informacji o kwocie konkretnego zamówienia
OrderPrice <- Orders1 %>%
mutate(Total = Quantity * Product.Price) %>%
group_by(Order.Number) %>%
summarise(Order.Date = first(Order.Date), Total.Amount = sum(Total)) %>%
arrange(desc(Order.Number))
#zsumowanie kwot zamówień dla danej daty i godziny
OrderPriceHour <- OrderPrice %>%
group_by(Order.Date) %>%
summarise(Hour.Amount = sum(Total.Amount))
#rozdzielenie kolumny z datą i godziną na dwie oddzielne kolumny
OrderHour <- sapply(OrderPriceHour$Order.Date, function(x) as.numeric(substr(x,12,13)))
OrderPriceHour <- mutate(OrderPriceHour, Order.Date = as.Date(substr(Order.Date,1,10), format = "%d/%m/%Y"), Order.Hour = OrderHour) %>%
arrange(desc(Order.Date), desc(Order.Hour))
#łaczymy ramki danych: restauracja i pogoda
Merged <- right_join(OrderPriceHour, Meteo, by = c("Order.Date" = "time", "Order.Hour" = "hour"))
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od temperatury
Merged1 <- Merged %>%
mutate(temperature = floor(temperature)) %>%
group_by(temperature) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount,0))) %>%
arrange(temperature)
barplot(height = Merged1$Hour.Amount,
names.arg = Merged1$temperature,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od temperatury powietrza",
xlab = "Temperatura (°C)",
ylab = "Średnie kwoty zamówień (GBP)",   #GBP - funt
col = "pink",
border = "black",
las = 1,
cex.names = 0.7)
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od typu pogody
Merged2 <- Merged %>%
mutate(weather_code = case_when(
weather_code %in% c(0, 1, 2, 3) ~ "Mostly Clear",
weather_code %in% c(45, 48) ~ "Fog",
weather_code %in% c(95, 96, 99) ~ "Thunder",
weather_code %in% c(71, 73, 75, 77, 85, 86) ~ "Snow",
weather_code %in% c(51, 53, 55, 56, 57, 61, 63, 65, 66, 67, 80, 81, 82) ~ "Rain",
TRUE ~ as.character(weather_code)
)) %>%
group_by(weather_code) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(desc(Hour.Amount))
barplot(height = Merged2$Hour.Amount,
names.arg = Merged2$weather_code,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od pogody",
xlab = "Typ pogody",
ylab = "Średnie kwoty zamówień (GBP)",
col = "cornflowerblue",
border = "black",
las = 1,
cex.names = 0.7)
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od wiatru
Merged3 <- Merged %>%
mutate(wind_speed = floor(wind_speed)) %>%
filter(wind_speed < 47) %>%
group_by(wind_speed) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(wind_speed)
barplot(height = Merged3$Hour.Amount,
names.arg = Merged3$wind_speed,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od prędkości wiatru",
xlab = "Prędkość wiatru (km/h)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "red",
border = "black",
las = 1,
cex.names = 0.7)
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od deszczu
Merged4 <- Merged %>%
mutate(rain = round(rain * 2)/2) %>%
group_by(rain) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(rain)
barplot(height = Merged4$Hour.Amount,
names.arg = Merged4$rain,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od opadów deszczu",
xlab = "Opady deszczu (mm)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "darkgreen",
border = "black",
las = 1,
cex.names = 0.7)
#tworzymy diagram zależności ilości wydawanych pięniedzy na zamówienia online w zależności od śniegu
Merged5 <- Merged %>%
mutate(snowfall = round(snowfall, digits = 1)) %>%
group_by(snowfall) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(snowfall)
barplot(height = Merged5$Hour.Amount,
names.arg = Merged5$snowfall,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od opadów śniegu",
xlab = "Opady śniegu (cm)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "purple",
border = "black",
las = 1,
cex.names = 0.7)
barplot(height = Merged1$Hour.Amount,
names.arg = Merged1$temperature,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od temperatury powietrza",
xlab = "Temperatura (°C)",
ylab = "Średnie kwoty zamówień (GBP)",   #GBP - funt
col = "pink",
border = "black",
las = 1,
cex.names = 0.7)
barplot(height = Merged2$Hour.Amount,
names.arg = Merged2$weather_code,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od pogody",
xlab = "Typ pogody",
ylab = "Średnie kwoty zamówień (GBP)",
col = "cornflowerblue",
border = "black",
las = 1,
cex.names = 0.7)
barplot(height = Merged3$Hour.Amount,
names.arg = Merged3$wind_speed,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od prędkości wiatru",
xlab = "Prędkość wiatru (km/h)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "red",
border = "black",
las = 1,
cex.names = 0.7)
Merged3 <- Merged %>%
mutate(wind_speed = floor(wind_speed)) %>%
group_by(wind_speed) %>%
summarise(Hour.Amount = mean(coalesce(Hour.Amount, 0))) %>%
arrange(wind_speed)
barplot(height = Merged3$Hour.Amount,
names.arg = Merged3$wind_speed,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od prędkości wiatru",
xlab = "Prędkość wiatru (km/h)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "red",
border = "black",
las = 1,
cex.names = 0.7)
barplot(height = Merged4$Hour.Amount,
names.arg = Merged4$rain,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od opadów deszczu",
xlab = "Opady deszczu (mm)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "darkgreen",
border = "black",
las = 1,
cex.names = 0.7)
barplot(height = Merged5$Hour.Amount,
names.arg = Merged5$snowfall,
main = "Zależność ilości wydawanych pięniędzy na zamówienia od opadów śniegu",
xlab = "Opady śniegu (cm)",
ylab = "Średnie kwoty zamówień (GBP)",
col = "purple",
border = "black",
las = 1,
cex.names = 0.7)
shiny::runApp('C:/Users/oliwi/Desktop/WojcickaOliwia/app')
runApp('C:/Users/oliwi/Desktop/WojcickaOliwia/app')
runApp('C:/Users/oliwi/Desktop/WojcickaOliwia/app')
load("C:/Users/oliwi/Desktop/WojcickaOliwia/app/.RData")
load("C:/Users/oliwi/Desktop/WojcickaOliwia/app/.RData")
shiny::runApp()
install.packages('rsconnect')
install.packages("rsconnect")
install.packages("rsconnect")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='<SECRET>')
install.packages('rsconnect')
install.packages("rsconnect")
install.packages("rsconnect")
library(rsconnect)
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='<SECRET>')
install.packages('rsconnect')
library(rsconnect)
install.packages("rsconnect")
install.packages("rsconnect")
rary()rs
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='<SECRET>')
rsconnect::deployApp('/Users/oliwi/Desktop/WojcickaOliwia/app/app.R"')
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='<SECRET>')
rsconnect::deployApp("C:\Users\oliwi\Desktop\WojcickaOliwia\app\app.R")
rsconnect::deployApp("/Users/oliwi/Desktop/WojcickaOliwia/app/app.R")
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("/Users/oliwi/Desktop/WojcickaOliwia/app/app.R")
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("/Users/oliwi/Desktop/WojcickaOliwia/app/app.R")
rsconnect::deployApp("C:\Users\oliwi\Desktop\WojcickaOliwia\app\app.R")
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/app.R")
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/app")
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/appmoja.R")
library(shiny); runApp('appmoja.R')
noworodki <- read_excel("/Users/oliwi/Desktop/WojcickaOliwia/app/Noworodki pozostawione w szpitalu 2007-2023.xlsx", sheet = "Noworodki pozostawione w szpita", skip = 4)
runApp('appmoja.R')
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
library(rsconnect)
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
library(rsconnect)
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/appmoja")
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
rlang::last_trace()
noworodki <- read_excel("Noworodki pozostawione w szpitalu 2007-2023.xlsx", sheet = "Noworodki pozostawione w szpita", skip = 4)
noworodki <- read_excel("/Users/oliwi/Desktop/WojcickaOliwia/Noworodki pozostawione w szpitalu 2007-2023.xlsx", sheet = "Noworodki pozostawione w szpita", skip = 4)
noworodki <- read_excel("/Users/oliwi/Desktop/WojcickaOliwia/app/Noworodki pozostawione w szpitalu 2007-2023.xlsx", sheet = "Noworodki pozostawione w szpita", skip = 4)
urodzenia <- read_excel("/Users/oliwi/Desktop/WojcickaOliwia/app/Urodzenia żywe w Polsce 2007-2023.xlsx", sheet = "Urodzenia żywe 2007-2023")
wynagrodzenia <- read_excel("/Users/oliwi/Desktop/WojcickaOliwia/app/Zeszyt1.xlsx", sheet = "Arkusz1")
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
library(shiny); runApp('appmoja.R')
runApp('appmoja.R')
runApp('appmoja.R')
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
quarto::quarto_check
install.packages("quarto")
quarto::quarto_check()
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
runApp()
runApp()
noworodki <- read_excel("Noworodki pozostawione w szpitalu 2007-2023.xlsx", sheet = "Noworodki pozostawione w szpita", skip = 4)
noworodki <- read_excel("Noworodki pozostawione w szpitalu 2007-2023.xlsx", sheet = "Noworodki pozostawione w szpita", skip = 4)
nowordki
noworodki
urodzenia <- read_excel("Urodzenia żywe w Polsce 2007-2023.xlsx", sheet = "Urodzenia żywe 2007-2023")
wynagrodzenia <- read_excel("Zeszyt1.xlsx", sheet = "Arkusz1")
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
library(rsconnect)
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
runApp()
runApp()
noworodki <- read_excel("/Users/oliwi/Desktop/WojcickaOliwia/Noworodki pozostawione w szpitalu 2007-2023.xlsx", sheet = "Noworodki pozostawione w szpita", skip = 4)
urodzenia <- read_excel("/Users/oliwi/Desktop/WojcickaOliwia/Urodzenia żywe w Polsce 2007-2023.xlsx", sheet = "Urodzenia żywe 2007-2023")
wynagrodzenia <- read_excel("/Users/oliwi/Desktop/WojcickaOliwia/Zeszyt1.xlsx", sheet = "Arkusz1")
rsconnect::setAccountInfo(name='oliwiawojcicka',
token='612BBF8CE433368683561105D8955556',
secret='m4ty+OXGiV0EfHyOmf5HEmBNgeuNzP6abXthDQ8H')
library(rsconnect)
rsconnect::deployApp("C:/Users/oliwi/Desktop/WojcickaOliwia/app/")
noworodki <- read_excel("/Users/oliwi/Desktop/WojcickaOliwia/Noworodki pozostawione w szpitalu 2007-2023.xlsx", sheet = "Noworodki pozostawione w szpita", skip = 4)
noworodki <- read_excel("Noworodki pozostawione w szpitalu 2007-2023.xlsx", sheet = "Noworodki pozostawione w szpita", skip = 4)
urodzenia <- read_excel("Urodzenia żywe w Polsce 2007-2023.xlsx", sheet = "Urodzenia żywe 2007-2023")
wynagrodzenia <- read_excel("Zeszyt1.xlsx", sheet = "Arkusz1")
runApp()
